{"version":3,"file":"cli.js","sources":["../node_modules/mri/lib/index.mjs","../node_modules/sade/lib/utils.js","../node_modules/sade/lib/index.js"],"sourcesContent":["function toArr(any) {\n\treturn any == null ? [] : Array.isArray(any) ? any : [any];\n}\n\nfunction toVal(out, key, val, opts) {\n\tvar x, old=out[key], nxt=(\n\t\t!!~opts.string.indexOf(key) ? (val == null || val === true ? '' : String(val))\n\t\t: typeof val === 'boolean' ? val\n\t\t: !!~opts.boolean.indexOf(key) ? (val === 'false' ? false : val === 'true' || (out._.push((x = +val,x * 0 === 0) ? x : val),!!val))\n\t\t: (x = +val,x * 0 === 0) ? x : val\n\t);\n\tout[key] = old == null ? nxt : (Array.isArray(old) ? old.concat(nxt) : [old, nxt]);\n}\n\nexport default function (args, opts) {\n\targs = args || [];\n\topts = opts || {};\n\n\tvar k, arr, arg, name, val, out={ _:[] };\n\tvar i=0, j=0, idx=0, len=args.length;\n\n\tconst alibi = opts.alias !== void 0;\n\tconst strict = opts.unknown !== void 0;\n\tconst defaults = opts.default !== void 0;\n\n\topts.alias = opts.alias || {};\n\topts.string = toArr(opts.string);\n\topts.boolean = toArr(opts.boolean);\n\n\tif (alibi) {\n\t\tfor (k in opts.alias) {\n\t\t\tarr = opts.alias[k] = toArr(opts.alias[k]);\n\t\t\tfor (i=0; i < arr.length; i++) {\n\t\t\t\t(opts.alias[arr[i]] = arr.concat(k)).splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i=opts.boolean.length; i-- > 0;) {\n\t\tarr = opts.alias[opts.boolean[i]] || [];\n\t\tfor (j=arr.length; j-- > 0;) opts.boolean.push(arr[j]);\n\t}\n\n\tfor (i=opts.string.length; i-- > 0;) {\n\t\tarr = opts.alias[opts.string[i]] || [];\n\t\tfor (j=arr.length; j-- > 0;) opts.string.push(arr[j]);\n\t}\n\n\tif (defaults) {\n\t\tfor (k in opts.default) {\n\t\t\tname = typeof opts.default[k];\n\t\t\tarr = opts.alias[k] = opts.alias[k] || [];\n\t\t\tif (opts[name] !== void 0) {\n\t\t\t\topts[name].push(k);\n\t\t\t\tfor (i=0; i < arr.length; i++) {\n\t\t\t\t\topts[name].push(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst keys = strict ? Object.keys(opts.alias) : [];\n\n\tfor (i=0; i < len; i++) {\n\t\targ = args[i];\n\n\t\tif (arg === '--') {\n\t\t\tout._ = out._.concat(args.slice(++i));\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (j=0; j < arg.length; j++) {\n\t\t\tif (arg.charCodeAt(j) !== 45) break; // \"-\"\n\t\t}\n\n\t\tif (j === 0) {\n\t\t\tout._.push(arg);\n\t\t} else if (arg.substring(j, j + 3) === 'no-') {\n\t\t\tname = arg.substring(j + 3);\n\t\t\tif (strict && !~keys.indexOf(name)) {\n\t\t\t\treturn opts.unknown(arg);\n\t\t\t}\n\t\t\tout[name] = false;\n\t\t} else {\n\t\t\tfor (idx=j+1; idx < arg.length; idx++) {\n\t\t\t\tif (arg.charCodeAt(idx) === 61) break; // \"=\"\n\t\t\t}\n\n\t\t\tname = arg.substring(j, idx);\n\t\t\tval = arg.substring(++idx) || (i+1 === len || (''+args[i+1]).charCodeAt(0) === 45 || args[++i]);\n\t\t\tarr = (j === 2 ? [name] : name);\n\n\t\t\tfor (idx=0; idx < arr.length; idx++) {\n\t\t\t\tname = arr[idx];\n\t\t\t\tif (strict && !~keys.indexOf(name)) return opts.unknown('-'.repeat(j) + name);\n\t\t\t\ttoVal(out, name, (idx + 1 < arr.length) || val, opts);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (defaults) {\n\t\tfor (k in opts.default) {\n\t\t\tif (out[k] === void 0) {\n\t\t\t\tout[k] = opts.default[k];\n\t\t\t}\n\t\t}\n\t}\n\n\tif (alibi) {\n\t\tfor (k in out) {\n\t\t\tarr = opts.alias[k] || [];\n\t\t\twhile (arr.length > 0) {\n\t\t\t\tout[arr.shift()] = out[k];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n","const GAP = 4;\nconst __ = '  ';\nconst ALL = '__all__';\nconst DEF = '__default__';\nconst NL = '\\n';\n\nfunction format(arr) {\n\tif (!arr.length) return '';\n\tlet len = maxLen( arr.map(x => x[0]) ) + GAP;\n\tlet join = a => a[0] + ' '.repeat(len - a[0].length) + a[1] + (a[2] == null ? '' : `  (default ${a[2]})`);\n\treturn arr.map(join);\n}\n\nfunction maxLen(arr) {\n  let c=0, d=0, l=0, i=arr.length;\n  if (i) while (i--) {\n    d = arr[i].length;\n    if (d > c) {\n      l = i; c = d;\n    }\n  }\n  return arr[l].length;\n}\n\nfunction noop(s) {\n\treturn s;\n}\n\nfunction section(str, arr, fn) {\n\tif (!arr || !arr.length) return '';\n\tlet i=0, out='';\n\tout += (NL + __ + str);\n\tfor (; i < arr.length; i++) {\n\t\tout += (NL + __ + __ + fn(arr[i]));\n\t}\n\treturn out + NL;\n}\n\nexports.help = function (bin, tree, key, single) {\n\tlet out='', cmd=tree[key], pfx=`$ ${bin}`, all=tree[ALL];\n\tlet prefix = s => `${pfx} ${s}`.replace(/\\s+/g, ' ');\n\n\t// update ALL & CMD options\n\tlet tail = [['-h, --help', 'Displays this message']];\n\tif (key === DEF) tail.unshift(['-v, --version', 'Displays current version']);\n\tcmd.options = (cmd.options || []).concat(all.options, tail);\n\n\t// write options placeholder\n\tif (cmd.options.length > 0) cmd.usage += ' [options]';\n\n\t// description ~> text only; usage ~> prefixed\n\tout += section('Description', cmd.describe, noop);\n\tout += section('Usage', [cmd.usage], prefix);\n\n\tif (!single && key === DEF) {\n\t\t// General help :: print all non-internal commands & their 1st line of text\n\t\tlet cmds = Object.keys(tree).filter(k => !/__/.test(k));\n\t\tlet text = cmds.map(k => [k, (tree[k].describe || [''])[0]]);\n\t\tout += section('Available Commands', format(text), noop);\n\n\t\tout += (NL + __ + 'For more info, run any command with the `--help` flag');\n\t\tcmds.slice(0, 2).forEach(k => {\n\t\t\tout += (NL + __ + __ + `${pfx} ${k} --help`);\n\t\t});\n\t\tout += NL;\n\t} else if (!single && key !== DEF) {\n\t\t// Command help :: print its aliases if any\n\t\tout += section('Aliases', cmd.alibi, prefix);\n\t}\n\n\tout += section('Options', format(cmd.options), noop);\n\tout += section('Examples', cmd.examples.map(prefix), noop);\n\n\treturn out;\n}\n\nexports.error = function (bin, str, num=1) {\n\tlet out = section('ERROR', [str], noop);\n\tout += (NL + __ + `Run \\`$ ${bin} --help\\` for more info.` + NL);\n\tconsole.error(out);\n\tprocess.exit(num);\n}\n\n// Strips leading `-|--` & extra space(s)\nexports.parse = function (str) {\n\treturn (str || '').split(/^-{1,2}|,|\\s+-{1,2}|\\s+/).filter(Boolean);\n}\n\n// @see https://stackoverflow.com/a/18914855/3577474\nexports.sentences = function (str) {\n\treturn (str || '').replace(/([.?!])\\s*(?=[A-Z])/g, '$1|').split('|');\n}\n","const mri = require('mri');\nconst $ = require('./utils');\n\nconst ALL = '__all__';\nconst DEF = '__default__';\n\nclass Sade {\n\tconstructor(name, isOne) {\n\t\tlet [bin, ...rest] = name.split(/\\s+/);\n\t\tisOne = isOne || rest.length > 0;\n\n\t\tthis.bin = bin;\n\t\tthis.ver = '0.0.0';\n\t\tthis.default = '';\n\t\tthis.tree = {};\n\t\t// set internal shapes;\n\t\tthis.command(ALL);\n\t\tthis.command([DEF].concat(isOne ? rest : '<command>').join(' '));\n\t\tthis.single = isOne;\n\t\tthis.curr = ''; // reset\n\t}\n\n\tcommand(str, desc, opts={}) {\n\t\tif (this.single) {\n\t\t\tthrow new Error('Disable \"single\" mode to add commands');\n\t\t}\n\n\t\t// All non-([|<) are commands\n\t\tlet cmd=[], usage=[], rgx=/(\\[|<)/;\n\t\tstr.split(/\\s+/).forEach(x => {\n\t\t\t(rgx.test(x.charAt(0)) ? usage : cmd).push(x);\n\t\t});\n\n\t\t// Back to string~!\n\t\tcmd = cmd.join(' ');\n\n\t\tif (cmd in this.tree) {\n\t\t\tthrow new Error(`Command already exists: ${cmd}`);\n\t\t}\n\n\t\t// re-include `cmd` for commands\n\t\tcmd.includes('__') || usage.unshift(cmd);\n\t\tusage = usage.join(' '); // to string\n\n\t\tthis.curr = cmd;\n\t\tif (opts.default) this.default=cmd;\n\n\t\tthis.tree[cmd] = { usage, alibi:[], options:[], alias:{}, default:{}, examples:[] };\n\t\tif (opts.alias) this.alias(opts.alias);\n\t\tif (desc) this.describe(desc);\n\n\t\treturn this;\n\t}\n\n\tdescribe(str) {\n\t\tthis.tree[this.curr || DEF].describe = Array.isArray(str) ? str : $.sentences(str);\n\t\treturn this;\n\t}\n\n\talias(...names) {\n\t\tif (this.single) throw new Error('Cannot call `alias()` in \"single\" mode');\n\t\tif (!this.curr) throw new Error('Cannot call `alias()` before defining a command');\n\t\tthis.tree[this.curr].alibi = this.tree[this.curr].alibi.concat(...names);\n\t\treturn this;\n\t}\n\n\toption(str, desc, val) {\n\t\tlet cmd = this.tree[ this.curr || ALL ];\n\n\t\tlet [flag, alias] = $.parse(str);\n\t\tif (alias && alias.length > 1) [flag, alias]=[alias, flag];\n\n\t\tstr = `--${flag}`;\n\t\tif (alias && alias.length > 0) {\n\t\t\tstr = `-${alias}, ${str}`;\n\t\t\tlet old = cmd.alias[alias];\n\t\t\tcmd.alias[alias] = (old || []).concat(flag);\n\t\t}\n\n\t\tlet arr = [str, desc || ''];\n\n\t\tif (val !== void 0) {\n\t\t\tarr.push(val);\n\t\t\tcmd.default[flag] = val;\n\t\t} else if (!alias) {\n\t\t\tcmd.default[flag] = void 0;\n\t\t}\n\n\t\tcmd.options.push(arr);\n\t\treturn this;\n\t}\n\n\taction(handler) {\n\t\tthis.tree[ this.curr || DEF ].handler = handler;\n\t\treturn this;\n\t}\n\n\texample(str) {\n\t\tthis.tree[ this.curr || DEF ].examples.push(str);\n\t\treturn this;\n\t}\n\n\tversion(str) {\n\t\tthis.ver = str;\n\t\treturn this;\n\t}\n\n\tparse(arr, opts={}) {\n\t\tarr = arr.slice(); // copy\n\t\tlet offset=2, tmp, idx, isVoid, cmd;\n\t\tlet alias = { h:'help', v:'version' };\n\t\tlet argv = mri(arr.slice(offset), { alias });\n\t\tlet isSingle = this.single;\n\t\tlet bin = this.bin;\n\t\tlet name = '';\n\n\t\tif (isSingle) {\n\t\t\tcmd = this.tree[DEF];\n\t\t} else {\n\t\t\t// Loop thru possible command(s)\n\t\t\tlet k, i=1, len=argv._.length + 1;\n\t\t\tfor (; i < len; i++) {\n\t\t\t\ttmp = argv._.slice(0, i).join(' ');\n\t\t\t\tif (this.tree[tmp] !== void 0) {\n\t\t\t\t\tname=tmp; idx=arr.indexOf(tmp, 1);\n\t\t\t\t} else {\n\t\t\t\t\tfor (k in this.tree) {\n\t\t\t\t\t\tif (this.tree[k].alibi.includes(tmp)) {\n\t\t\t\t\t\t\tidx = arr.indexOf(tmp);\n\t\t\t\t\t\t\tarr.splice(idx, 1, ...k.split(' '));\n\t\t\t\t\t\t\tname = k;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcmd = this.tree[name];\n\t\t\tisVoid = (cmd === void 0);\n\n\t\t\tif (isVoid) {\n\t\t\t\tif (this.default) {\n\t\t\t\t\tname = this.default;\n\t\t\t\t\tcmd = this.tree[name];\n\t\t\t\t\tarr.unshift(name);\n\t\t\t\t\toffset++;\n\t\t\t\t} else if (tmp) {\n\t\t\t\t\treturn $.error(bin, `Invalid command: ${tmp}`);\n\t\t\t\t} //=> else: cmd not specified, wait for now...\n\t\t\t}\n\t\t}\n\n\t\t// show main help if relied on \"default\" for multi-cmd\n\t\tif (argv.help) return this.help(!isSingle && !isVoid && name);\n\t\tif (argv.version) return this._version();\n\n\t\tif (!isSingle && cmd === void 0) {\n\t\t\treturn $.error(bin, 'No command specified.');\n\t\t}\n\n\t\tlet all = this.tree[ALL];\n\t\t// merge all objects :: params > command > all\n\t\topts.alias = Object.assign(all.alias, cmd.alias, opts.alias);\n\t\topts.default = Object.assign(all.default, cmd.default, opts.default);\n\n\t\ttmp = name.split(' ');\n\t\tidx = arr.indexOf(tmp[0], 2);\n\t\tif (!!~idx) arr.splice(idx, tmp.length);\n\n\t\tlet vals = mri(arr.slice(offset), opts);\n\t\tif (!vals || typeof vals === 'string') {\n\t\t\treturn $.error(bin, vals || 'Parsed unknown option flag(s)!');\n\t\t}\n\n\t\tlet segs = cmd.usage.split(/\\s+/);\n\t\tlet reqs = segs.filter(x => x.charAt(0)==='<');\n\t\tlet args = vals._.splice(0, reqs.length);\n\n\t\tif (args.length < reqs.length) {\n\t\t\tif (name) bin += ` ${name}`; // for help text\n\t\t\treturn $.error(bin, 'Insufficient arguments!');\n\t\t}\n\n\t\tsegs.filter(x => x.charAt(0)==='[').forEach(_ => {\n\t\t\targs.push(vals._.shift()); // adds `undefined` per [slot] if no more\n\t\t});\n\n\t\targs.push(vals); // flags & co are last\n\t\tlet handler = cmd.handler;\n\t\treturn opts.lazy ? { args, name, handler } : handler.apply(null, args);\n\t}\n\n\thelp(str) {\n\t\tconsole.log(\n\t\t\t$.help(this.bin, this.tree, str || DEF, this.single)\n\t\t);\n\t}\n\n\t_version() {\n\t\tconsole.log(`${this.bin}, ${this.ver}`);\n\t}\n}\n\nmodule.exports = (str, isOne) => new Sade(str, isOne);\n"],"names":["ALL","DEF","$"],"mappings":"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"}